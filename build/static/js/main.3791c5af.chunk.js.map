{"version":3,"sources":["img/Nanotekspice.gif","img/background1.jpeg","img/Plazza.gif","img/Escape.gif","Navigation.js","Header.js","Services.js","ProjectDisplay.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","navLinks","map","section","href","className","logoTitle","myStyles","backgroundImage","Background","height","backgroundSize","Header","style","title","button","iconObj","icon","name","description","Icons","Services","projectObj","img","src","gif1","alt","width","gif2","gif3","ProjectsGifs","ProjectDisplay","Boolean","window","location","hostname","match","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3791c5af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Nanotekspice.9e102395.gif\";","module.exports = __webpack_public_path__ + \"static/media/background1.58416de6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Plazza.7712ca56.gif\";","module.exports = __webpack_public_path__ + \"static/media/Escape.012ade00.gif\";","import React from 'react';\n\nimport './Navigation.css';\n\nfunction Navigation(props) {\n  const sections = ['Home', 'About', 'Contact'];\n  const navLinks = sections.map( section => {\n    return (\n      <li><a href={'#' + section}>{section}</a></li>\n    )\n  });\n  return (\n    <nav>\n      <h2 className=\"logo\" > { props.logoTitle } </h2>\n      <ul>\n        {navLinks}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Header.css';\nimport Background from './img/background1.jpeg';\n\nconst myStyles = {\n    backgroundImage: `url( ${Background} )`,\n    height: '50vh',\n    backgroundSize: 'cover'\n}\n\nfunction Header(props) {\n    return (\n        <header style= {myStyles}>\n            <h1> {props.title} </h1>\n            <p>Mon petit portfolio des familles</p>\n            <a href=\"#button\"> {props.button} </a>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nimport './Services.css'\n\nfunction Services() {\n    return (\n        <div className=\"services\" >\n            <h3>Portfolio</h3>\n            <h2>What am I trying to convey with this</h2>\n            <div className=\"row\">\n                <Icons icon={iconObj[0].icon} title={iconObj[0].title} description={iconObj[0].description} />\n                <Icons icon={iconObj[1].icon} title={iconObj[1].title} description={iconObj[1].description} />\n                <Icons icon={iconObj[2].icon} title={iconObj[2].title} description={iconObj[2].description} />\n                <Icons icon={iconObj[3].icon} title={iconObj[3].title} description={iconObj[3].description} />\n            </div>\n        </div>\n    );\n}\n\nconst iconObj = [\n    {\n        icon: <ion-icon name=\"calculator-outline\"></ion-icon>,\n        title: 'Technical',\n        description: 'A way to demonstrate how I manage applied problems'\n    },\n    {\n        icon: <ion-icon name=\"game-controller-outline\"></ion-icon>,\n        title: 'Interactivity',\n        description: 'Show my heat towards video games'\n    },\n    {\n        icon: <ion-icon name=\"hammer-outline\"></ion-icon>,\n        title: 'Resourcefulness',\n        description: 'This is a display of what I\\'ve done yet'\n    },\n    {\n        icon: <ion-icon name=\"link-outline\"></ion-icon>,\n        title: 'Contact',\n        description: 'Are we keeping in touch ?'\n    }\n];\n\nfunction Icons(props) {\n    return (\n        <div>\n            <span>\n                {props.icon}\n            </span>\n            <h4>{props.title}</h4>\n            <p>{props.description}</p>\n        </div>\n    );\n}\n\nexport default Services;","import React from 'react';\n\nimport './ProjectDisplay.css'\nimport gif1 from './img/Plazza.gif'\nimport gif2 from './img/Nanotekspice.gif'\nimport gif3 from './img/Escape.gif'\n\nfunction ProjectDisplay() {\n    return (\n        <div className=\"projectDisplay\">\n            <div className=\"project1\">\n                <ProjectsGifs img={projectObj[0].img} title={projectObj[0].title} description={projectObj[0].description} />\n            </div>\n            <div className=\"project2\">\n                <ProjectsGifs img={projectObj[1].img} title={projectObj[1].title} description={projectObj[1].description} />\n            </div>\n            <div className=\"project3\">\n                <ProjectsGifs img={projectObj[2].img} title={projectObj[2].title} description={projectObj[2].description} />\n            </div>\n            <div className=\"project4\">\n                <ProjectsGifs img={projectObj[3].img} title={projectObj[3].title} description={projectObj[3].description} />\n            </div>\n            <div className=\"project5\">\n                <ProjectsGifs img={projectObj[4].img} title={projectObj[4].title} description={projectObj[4].description} />\n            </div>\n        </div>\n    );\n}\n\nconst projectObj = [\n    {\n        img: <img src={gif1} alt=\"gif\" height=\"70%\" width=\"70%\"></img>,\n        title: 'Plazza',\n        description: 'The purpose of this project was to realize a simulation of a pizzeria, which is composed of a reception that accepts new commands, of several kitchens, themselves with several cooks, themselves cooking several pizzas. With this project, I learnt to deal with various problems, including load balancing, process and thread synchronizationand communication.'\n    },\n    {\n        img: <img src={gif2} alt=\"gif\" height=\"70%\" width=\"70%\"></img>,\n        title: 'Nanotekspice',\n        description: 'The goal with this projevt was to build a logic simulator that builds a graph (the nodes of which will be simulated digital electroniccomponents, inputs or outputs) from a configuration file, and injects values into that graph to get results. I really like this one. It was my first real C++ project and it made me grasp concepts such as interfaces, abstraction, encapsulation and polymorphism.'\n    },\n    {\n        img: <img src={gif2} alt=\"gif\" height=\"70%\" width=\"70%\"></img>,\n        title: '42sh',\n        description: 'With this project, the goal was to write a Unix SHELL based on tcsh. What I learned with it was to develop group coherence but most importantly to be rigorous. We had to implement a lot of features and stability was mandatory.'\n    },\n    {\n        img: <img src={gif2} alt=\"gif\" height=\"70%\" width=\"70%\"></img>,\n        title: 'MyRunner',\n        description: 'This was the first game I made in my curriculum. We were asked to build a small video game based on the rules of a finite Endless Running Game. First time managing inputs, animating sprites or simply developping a game from scratch ! The parallax effect\\'s making was simple, but so pleasant to see that I think it\\'s maybe one of the factor that made me think video games is what i want to do.'\n    },\n    {\n        img: <img src={gif3} alt=\"gif\" height=\"70%\" width=\"70%\"></img>,\n        title: 'Escape',\n        description: 'I made Escape during my first game jam. I was pretty sober on the theme interpretation (It was \"Escape\"). I had already fooled around unity but this is my first \"real\" experience with it. I loved it.'\n    }\n];\n\nconst projectUnityObj = [\n    {\n        game: <iframe src=\"./src/unityGames/actiongame/index.html\"></iframe>,\n        title: 'Escape',\n        description: 'I made Escape during my first game jam. I was pretty sober on the theme interpretation (It was \"Escape\"). I had already fooled around unity but this is my first \"real\" experience with it. I loved it.'\n    },\n    {\n        game: <iframe src=\"./src/unityGames/actiongame/index.html\"></iframe>,\n        title: 'AnimationPrototype',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas luctus fermentum erat, non placerat libero faucibus et. Phasellus ut nisi urna. Pellentesque eget libero accumsan, commodo lectus in, faucibus nibh. Integer ac tempus metus. Fusce nec nunc arcu. Sed euismod lectus ultrices, interdum enim et, suscipit magna. Donec bibendum diam vel quam blandit ornare.Lorem ipsum dolor sit amet, consectetur adipiscing elit. In hac habitasse platea dictumst. Phasellus nec augue gravida, consectetur neque eu, imperdiet neque.'\n    }\n];\n\nfunction ProjectsGifs(props)\n{\n    return (\n        <div>\n            <span>\n                {props.img}\n            </span>\n            <h4>{props.title}</h4>\n            <p>{props.description}</p>\n        </div>\n    );\n}\n\nfunction ProjectsUnity(props)\n{\n    return (\n        <div>\n            <span>\n                {props.game}\n            </span>\n            <h4>{props.title}</h4>\n            <p>{props.description}</p>\n        </div>\n    );\n}\n\nexport default ProjectDisplay;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Navigation from './Navigation';\nimport Header from './Header';\nimport Services from './Services';\nimport ProjectDisplay from './ProjectDisplay';\nimport * as serviceWorker from './serviceWorker';\n\nfunction App() {\n  return (\n    <div>\n      <Navigation logoTitle=\"Portfolio\"/>\n      <Header title=\"Portfolio\" button=\"Le Button s'il vous plait\"/>\n      <Services/>\n      <ProjectDisplay/>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}